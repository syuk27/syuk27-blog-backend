spring.application.name=blog
logging.level.org.springframework=info

#spring.jpa.defer-datasource-initialization=true

#시큐리티 설정
security-username=${SECURITY_USERNAME}
security-password=${SECURITY_PASSWORD}

#mysql
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# SQL 로그 출력
#spring.jpa.show-sql=false
#logging.level.org.hibernate.SQL=debug
#logging.level.org.hibernate.orm.jdbc.bind=trace
#logging.level.org.hibernate.resource.jdbc=trace
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.highlight_sql=true
spring.jpa.properties.hibernate.session_factory.statement_inspector=com.syuk27.blog.env.HibernateSQLInterceptor

# 3에서 적용 안됨
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#spring.jpa.properties.hibernate.use_Sql_comments=true
#spring.jpa.properties.hibernate.type=trace

# Hibernate 설정
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.properties.hibernate.connection.isolation=2

# cloudinary
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api-key=${CLOUDINARY_API_KEY}
cloudinary.api-secret=${CLOUDINARY_API_SECRET}

# OAuth2 인증 서버 URL
app.auth.url=http://localhost:5173